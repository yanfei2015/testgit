<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2014 杭州端点网络科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="Item">
    <resultMap id="ItemMap" type="Item">
        <id column="id" property="id"/>
        <result column="outer_item_id" property="outerItemId"/>
        <result column="category_id" property="categoryId"/>
        <result column="spu_id" property="spuId"/>
        <result column="user_id" property="userId"/>
        <result column="shop_id" property="shopId"/>
        <result column="shop_name" property="shopName"/>
        <result column="brand_id" property="brandId"/>
        <result column="brand_name" property="brandName"/>
        <result column="name" property="name"/>
        <result column="main_image" property="mainImage"/>
        <result column="price" property="price"/>
        <result column="origin_price" property="originPrice"/>
        <result column="stock_quantity" property="stockQuantity"/>
        <result column="sale_quantity" property="saleQuantity"/>
        <result column="province_id" property="provinceId"/>
        <result column="city_id" property="cityId"/>
        <result column="region_id" property="regionId"/>
        <result column="status" property="status"/>
        <result column="on_shelf_at" property="onShelfAt" />
        <result column="off_shelf_at" property="offShelfAt" />
        <result column="model" property="model" />
        <result column="remark" property="remark" />
        <result column="market_tag" property="marketTag" />
        <result column="type" property="type"/>
        <result column="bit_mark" property="bitMark"/>
        <result column="distributable" property="distributable"/>
        <result column="extra" property="extra" />
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        parana_items
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        outer_item_id, category_id, spu_id, user_id, shop_id, shop_name, brand_id, brand_name, name, main_image, price, origin_price,
        stock_quantity, sale_quantity, province_id, city_id, region_id, status,
        on_shelf_at, off_shelf_at, model, remark, market_tag, `type`, bit_mark, distributable, extra, created_at, updated_at
    </sql>

    <sql id="vals">
        #{outerItemId}, #{categoryId}, #{spuId}, #{userId}, #{shopId}, #{shopName}, #{brandId}, #{brandName}, #{name}, #{mainImage}, #{price}, #{originPrice},
        #{stockQuantity}, #{saleQuantity}, #{provinceId}, #{cityId},
        #{regionId}, #{status}, #{onShelfAt}, #{offShelfAt}, #{model}, #{remark}, #{marketTag}, #{type}, #{bitMark}, #{distributable}, #{extra}, now(), now()
    </sql>

    <sql id="type_in_types">
        `type` IN <foreach collection="types" item="type"
                 open="(" separator="," close=")">
            #{type}
        </foreach>
    </sql>

    <sql id="criteria">
        WHERE 1 = 1
        <if test="id != null"> AND id = #{id} </if>
        <if test="ids != null"> AND id IN <foreach collection="ids" open="(" separator="," close=")" item="id">#{id}</foreach> </if>
        <if test="name != null"> AND name LIKE CONCAT('%', #{name} ,'%') </if>
        <if test="categoryId != null"> AND category_id = #{categoryId} </if>
        <if test="spuId != null"> AND spu_id = #{spuId} </if>
        <if test="shopId != null"> AND shop_id = #{shopId} </if>
        <if test="shopName != null"> AND shop_name LIKE CONCAT('%', #{shopName} ,'%') </if>
        <if test="userId != null"> AND user_id = #{userId} </if>
        <if test="brandId != null"> AND brand_id = #{brandId} </if>
        <if test="brandName != null"> AND brand_name = #{brandName} </if>
        <if test="status != null"> AND status = #{status} </if>
        <if test="provinceId != null"> AND province_id = #{provinceId} </if>
        <if test="cityId != null"> AND city_id = #{cityId} </if>
        <if test="regionId != null"> AND region_id = #{regionId} </if>
        <if test="type != null"> AND `type` = #{type} </if>
        <if test="type == null and types != null">
            AND <include refid="type_in_types"/>
        </if>
        <if test="updatedFrom != null"> AND <![CDATA[updated_at >= #{updatedFrom}]]> </if>
        <if test="updatedTo != null"> AND <![CDATA[updated_at < #{updatedTo}]]> </if>
    </sql>

    <sql id="criteria_for_seller">
        <where>
            user_id=#{userId}
            <if test="id != null"> AND id = #{id} </if>
            <if test="name != null"> AND name LIKE CONCAT('%', #{name},'%') </if>
            <if test="priceFrom != null"> AND <![CDATA[price >= #{priceFrom}]]> </if>
            <if test="priceTo != null"> AND <![CDATA[price <= #{priceTo}]]> </if>
            <if test="stockQuantityFrom != null"> AND <![CDATA[stock_quantity >= #{stockQuantityFrom}]]> </if>
            <if test="stockQuantityTo != null"> AND <![CDATA[stock_quantity <= #{stockQuantityTo}]]> </if>
            <if test="saleQuantityFrom != null"> AND <![CDATA[sale_quantity >= #{saleQuantityFrom}]]> </if>
            <if test="saleQuantityTo != null"> AND <![CDATA[sale_quantity <= #{saleQuantityTo}]]> </if>
            <if test="onShelfFrom != null"> AND <![CDATA[on_shelf_at >= #{onShelfFrom}]]> </if>
            <if test="onShelfTo != null"> AND <![CDATA[on_shelf_at < #{onShelfTo}]]> </if>
            <if test="offShelfFrom != null"> AND <![CDATA[off_shelf_at >= #{offShelfFrom}]]> </if>
            <if test="offShelfTo != null"> AND <![CDATA[off_shelf_at < #{offShelfTo}]]> </if>
            <if test="statuses != null">
                AND status IN
                <foreach item="status" collection="statuses"
                         open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="brandId != null"> AND brand_id = #{brandId} </if>
            <if test="type != null"> AND `type` = #{type} </if>
            <if test="type == null and types != null">
                AND <include refid="type_in_types"/>
            </if>
            <if test="distributable != null"> AND distributable = #{distributable} </if>
        </where>
    </sql>

    <sql id="custom_sort_type">
        <if test="sortType != null">
            <if test="sortType == 1"> ASC </if>
            <if test="sortType == 2"> DESC </if>
        </if>
    </sql>

    <sql id="custom_sort">
        <if test="sortBy != null">
            <if test="sortBy == 'id'"> ORDER BY id <include refid="custom_sort_type"/> </if>
            <if test="sortBy == 'price'"> ORDER BY price <include refid="custom_sort_type"/> </if>
            <if test="sortBy == 'saleQuantity'"> ORDER BY sale_quantity <include refid="custom_sort_type"/> </if>
            <if test="sortBy == 'onShelfAt'"> ORDER BY on_shelf_at <include refid="custom_sort_type"/> </if>
            <if test="sortBy == 'updatedAt'"> ORDER BY updated_at <include refid="custom_sort_type"/> </if>
        </if>
    </sql>

    <insert id="create" parameterType="Item" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="load" parameterType="long" resultMap="ItemMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="loads" parameterType="list" resultMap="ItemMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="loadsBy" parameterType="map" resultMap="ItemMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        <include refid="criteria" />
        <if test="ids != null">
            AND id IN
            <foreach item="id" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>

    <select id="list" parameterType="map" resultMap="ItemMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <update id="update" parameterType="Item">
        UPDATE <include refid="tb"/>
        <set>
            <if test="outerItemId != null"> outer_item_id = #{outerItemId}, </if>
            <if test="name != null"> name = #{name}, </if>
            <if test="categoryId != null"> category_id = #{categoryId}, </if>
            <if test="spuId != null"> spu_id = #{spuId}, </if>
            <if test="brandId != null"> brand_id = #{brandId}, </if>
            <if test="brandName != null"> brand_name = #{brandName}, </if>
            <if test="mainImage != null"> main_image = #{mainImage}, </if>
            <if test="status != null"> status = #{status}, </if>
            <if test="stockQuantity != null"> stock_quantity = #{stockQuantity}, </if>
            <if test="provinceId != null"> province_id = #{provinceId}, </if>
            <if test="cityId != null"> city_id = #{cityId}, </if>
            <if test="regionId != null"> region_id = #{regionId}, </if>
            <if test="price != null">price = #{price}, </if>
            <if test="originPrice != null">origin_price = #{originPrice}, </if>
            <if test="model != null">model = #{model}, </if>
            <if test="remark != null">remark = #{remark}, </if>
            <if test="type != null">`type` = #{type},</if>
            <if test="bitMark != null">bit_mark = #{bitMark},</if>
            <if test="distributable != null">distributable = #{distributable},</if>
            <if test="extra != null">extra = #{extra}, </if>
            updated_at=now()
        </set>
        WHERE id=#{id}
    </update>
    
    <update id="updateMarketTag" parameterType="map">
        UPDATE <include refid="tb"/>
        <set>
            <if test="marketTag != null">market_tag = #{marketTag}, </if>
            updated_at=now()
        </set>
        WHERE id=#{id}
    </update>

    <update id="setStatuses" parameterType="map">
        UPDATE <include refid="tb" />
        <set>
            updated_at = now(),`status`=#{status},
            on_shelf_at = (CASE
            WHEN #{status}=1
            THEN now()
            ELSE on_shelf_at
            END),
            off_shelf_at = (CASE
            WHEN #{status}=-1 OR #{status}=-2
            THEN now()
            ELSE off_shelf_at
            END)
        </set>
        WHERE
        <if test="userId!=null"> user_id=#{userId} AND</if>
        id IN
        <foreach item="id" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="updateSaleQuantity" parameterType="map">
        UPDATE <include refid="tb" />
        SET
          sale_quantity = sale_quantity + #{quantity},
          stock_quantity = stock_quantity - #{quantity}
        WHERE id = #{itemId}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <update id="setStatus" parameterType="map">
        UPDATE <include refid="tb" />
        SET status = #{status}, updated_at = now()
        WHERE id = #{id}
    </update>

    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>
    <select id="paging" parameterType="map" resultMap="ItemMap">
        SELECT
        <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        <include refid="custom_sort"/>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countItemsAsSeller" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria_for_seller"/>
    </select>
    <select id="pagingItemsAsSeller" parameterType="map" resultMap="ItemMap">
        SELECT
        <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria_for_seller"/>
        <include refid="custom_sort"/>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countBySpuId" parameterType="long" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb" />
        WHERE spu_id = #{spuId} and status = 1
    </select>

    <select id="countOnShelfByShopId" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb" />
        WHERE shop_id = #{shopId} AND status = 1 AND <include refid="type_in_types"/>
    </select>

    <select id="countOnShelfByUserId" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb" />
        WHERE user_id = #{userId} AND status = 1 AND <include refid="type_in_types"/>
    </select>

    <select id="countOnShelfByShopIds" parameterType="map" resultType="map">
        SELECT shop_id as shopId, count(1) as itemCount
        FROM <include refid="tb" />
        WHERE status = 1 AND <include refid="type_in_types"/> AND shop_id IN
        <foreach item="shopId" collection="shopIds"
                 open="(" separator="," close=")">
            #{shopId}
        </foreach>
        GROUP BY shop_id
    </select>

    <select id="countOffShelfByShopId" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb" />
        WHERE shop_id = #{shopId} AND status IN (0, -1) AND <include refid="type_in_types"/>
    </select>

    <select id="countOffShelfByUserId" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb" />
        WHERE user_id = #{userId} AND status IN (0, -1) AND <include refid="type_in_types"/>
    </select>

    <!-- 将所有商品(排除逻辑删除的)变为冻结状态 -->
    <update id="frozenByShopIds" parameterType="list">
        UPDATE <include refid="tb"/>
        SET status = -2, updated_at = now()
        WHERE shop_id IN
        <foreach item="shopId" collection="list"
                 open="(" separator="," close=")">
            #{shopId}
        </foreach>
        AND status != -3
    </update>

    <!-- 解冻商品, 将冻结的商品变为下架 -->
    <update id="unFrozenByShopIds" parameterType="list">
        UPDATE <include refid="tb"/>
        SET status = -1, updated_at = now()
        WHERE shop_id IN
        <foreach item="shopId" collection="list"
                 open="(" separator="," close=")">
            #{shopId}
        </foreach>
        AND status = -2
    </update>

    <!-- for search -->
    <select id="lastId" resultType="long">
        SELECT MAX(id) FROM <include refid="tb" />
    </select>
    <select id="listTo" resultMap="ItemMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb" />
        WHERE <![CDATA[
          id < #{lastId}
        ]]>
        ORDER BY id DESC LIMIT #{limit}
    </select>
    <select id="listSince" resultMap="ItemMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb" />
        WHERE  <![CDATA[
          id < #{lastId} AND updated_at > #{since}
        ]]>
        ORDER BY id DESC LIMIT #{limit}
    </select>

    <select id="findShopIdsByItemIds" resultType="long">
        SELECT DISTINCT shop_id FROM <include refid="tb" />
        WHERE id IN
        <foreach item="id" collection="list"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="findItemIdsByShopIds" resultType="map">
        SELECT id FROM <include refid="tb" />
        WHERE <include refid="type_in_types"/>
        AND shop_id IN
        <foreach item="shopId" collection="shopIds"
                 open="(" separator="," close=")">
            #{shopId}
        </foreach>
    </select>

    <select id="findShopNewestItems" parameterType="map" resultMap="ItemMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE shop_id = #{shopId}
        AND status = 1 AND <include refid="type_in_types"/>
        ORDER BY created_at DESC
        limit #{limit}
    </select>

    <select id="findShopSaleItem" parameterType="map" resultMap="ItemMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE shop_id = #{shopId}
        AND status = 1 AND <include refid="type_in_types"/>
        ORDER BY sale_quantity DESC
        limit #{limit}
    </select>

    <select id="findShopNewestItemsWithoutItemIds" parameterType="map" resultMap="ItemMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE shop_id = #{shopId} AND <include refid="type_in_types"/>
        AND id NOT IN
        <foreach collection="itemIds" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
        ORDER BY created_at DESC
        limit #{limit}
    </select>

    <select id="findShopSaleItemWithoutItemIds" parameterType="map" resultMap="ItemMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE shop_id = #{shopId} AND <include refid="type_in_types"/>
        AND id NOT IN
        <foreach collection="itemIds" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
        ORDER BY sale_quantity DESC
        limit #{limit}
    </select>

    <select id="dailyItemIncrement" parameterType="map" resultType="int">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        WHERE created_at &gt; #{startAt}
        AND created_at &lt; #{endAt} AND <include refid="type_in_types"/>
    </select>

    <select id="dailyOnShelfItem" parameterType="map" resultType="int">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        WHERE on_shelf_at &gt; #{startAt}
        AND on_shelf_at &lt; #{endAt}
        AND status = 1
        AND <include refid="type_in_types"/>
    </select>

    <select id="findByOuterItemId" parameterType="string" resultMap="ItemMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE outer_item_id = #{outerItemId}
    </select>

    <select id="checkItemDup" parameterType="map" resultType="int">
        SELECT count(1) FROM <include refid="tb"/> WHERE user_id = #{userId} AND `name` = #{name} AND `status` != -3
    </select>

    <select id="getDupItemId" parameterType="map" resultType="long">
        SELECT id FROM <include refid="tb"/> WHERE user_id = #{userId} AND `name` = #{name} AND `status` != -3
    </select>
</mapper>