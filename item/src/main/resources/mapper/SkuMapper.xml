<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2014 杭州端点网络科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Sku">

    <resultMap id="SkuMap" type="Sku">
        <id property="id" column="id"/>
        <result column="sku_code" property="skuCode"/>
        <result column="item_id" property="itemId"/>
        <result column="shop_id" property="shopId"/>
        <result column="status" property="status"/>
        <result column="model" property="model"/>
        <result column="outer_item_id" property="outerItemId"/>
        <result column="outer_shop_id" property="outerShopId"/>
        <result column="origin_price" property="originPrice"/>
        <result column="price" property="price" />
        <result column="stock_quantity" property="stockQuantity" />
        <result column="image" property="image" />
        <result column="name" property="name"/>
        <result column="desc" property="desc"/>
        <result column="attribute_key1" property="attributeKey1" />
        <result column="attribute_key_id1" property="attributeKeyId1" />
        <result column="attribute_name1" property="attributeName1" />
        <result column="attribute_value1" property="attributeValue1" />
        <result column="attribute_key2" property="attributeKey2" />
        <result column="attribute_key_id2" property="attributeKeyId2" />
        <result column="attribute_name2" property="attributeName2" />
        <result column="attribute_value2" property="attributeValue2" />
        <result column="extra" property="extra"/>
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
    </resultMap>

    <sql id="tb">
        parana_skus
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        sku_code, item_id, shop_id, status, model, outer_item_id, outer_shop_id, origin_price, price, stock_quantity, image, `name`, `desc`, attribute_key1, attribute_key_id1, attribute_name1, attribute_value1,
        attribute_key2, attribute_key_id2, attribute_name2, attribute_value2, extra, created_at, updated_at
    </sql>

    <sql id="vals">
        #{skuCode}, #{itemId}, #{shopId}, #{status}, #{model}, #{outerItemId}, #{outerShopId}, #{originPrice}, #{price}, #{stockQuantity}, #{image}, #{name}, #{desc}, #{attributeKey1}, #{attributeKeyId1}, #{attributeName1}, #{attributeValue1},
        #{attributeKey2}, #{attributeKeyId2}, #{attributeName2}, #{attributeValue2}, #{extra}, now(), now()
    </sql>

    <!-- 查询条件 -->
    <sql id="criteria">
        WHERE 1 = 1
        <if test="itemId != null"> AND item_id = #{itemId}  </if>
        <if test="attributeValue1 != null"> AND attribute_value1 = #{attributeValue1}  </if>
        <if test="attributeValue2 != null"> AND attribute_value2 = #{attributeValue2}  </if>
    </sql>

    <insert id="create" parameterType="Sku" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        <foreach collection="list" item="i" index="index" separator=",">
            (
            #{i.skuCode}, #{i.itemId}, #{i.shopId}, #{i.status}, #{i.model}, #{i.outerItemId}, #{i.outerShopId}, #{i.originPrice}, #{i.price}, #{i.stockQuantity}, #{i.image}, #{i.name}, #{i.desc}, #{i.attributeKey1}, #{i.attributeKeyId1},
            #{i.attributeName1}, #{i.attributeValue1}, #{i.attributeKey2}, #{i.attributeKeyId2}, #{i.attributeName2},
            #{i.attributeValue2}, #{i.extra}, now(), now()
            )
        </foreach>
    </insert>

    <select id="load" parameterType="long" resultMap="SkuMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="loads" parameterType="list" resultMap="SkuMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
          #{id}
        </foreach>
    </select>

    <select id="list" parameterType="Sku" resultMap="SkuMap">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb"/>
        <include refid="criteria" />
    </select>

    <select id="findByItemId" parameterType="long" resultMap="SkuMap">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb"/>
        WHERE item_id = #{itemId}
    </select>

    <select id="findByItemIds" parameterType="list" resultMap="SkuMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb" />
        WHERE item_id IN
        <foreach collection="list" open="(" separator="," close=")"
                 item="itemId">
            #{itemId}
        </foreach>
    </select>

    <select id="findSkuByAttributeValuesAndItemId" parameterType="Sku">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE
        item_id = ${itemId}
        AND attribute_value1 = #{attributeValue1}
        AND attribute_value2 = #{attributeValue2}
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb" />
        WHERE id = #{id}
    </delete>

    <delete id="deleteByItemId" parameterType="long">
        DELETE FROM <include refid="tb" />
        WHERE item_id = #{itemId}
    </delete>

    <update id="update" parameterType="Sku">
        UPDATE <include refid="tb" />
        <set>
            <if test="skuCode != null"> sku_code = #{skuCode}, </if>
            <if test="itemId != null"> item_id = #{itemId}, </if>
            <if test="shopId != null"> shop_id = #{shopId}, </if>
            <if test="model != null"> model = #{model}, </if>
            <if test="outerItemId != null"> outer_item_id = #{outerItemId}, </if>
            <if test="outerShopId != null"> outer_shop_id = #{outerShopId}, </if>
            <if test="originPrice != null"> origin_price = #{originPrice}, </if>
            <if test="price != null"> price = #{price}, </if>
            <if test="stockQuantity != null"> stock_quantity = #{stockQuantity}, </if>
            <if test="image != null"> image = #{image}, </if>
            <if test="name != null"> `name` = #{name}, </if>
            <if test="desc != null"> `desc` = #{desc}, </if>
            <if test="attributeKey1 != null"> attribute_key1 = #{attributeKey1}, </if>
            <if test="attributeKeyId1 != null"> attribute_key_id1 = #{attributeKeyId1}, </if>
            <if test="attributeName1 != null"> attribute_name1 = #{attributeName1}, </if>
            <if test="attributeValue1 != null"> attribute_value1 = #{attributeValue1}, </if>
            <if test="attributeKey2 != null"> attribute_key2 = #{attributeKey2}, </if>
            <if test="attributeKeyId2 != null"> attribute_key_id2 = #{attributeKeyId2}, </if>
            <if test="attributeName2 != null"> attribute_name2 = #{attributeName2}, </if>
            <if test="attributeValue2 != null"> attribute_value2 = #{attributeValue2}, </if>
            <if test="extra!=null"> extra = #{extra}, </if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateStockQuantity" parameterType="map">
        UPDATE <include refid="tb" />
        SET stock_quantity = stock_quantity - #{quantity}, updated_at = now()
        WHERE id = #{skuId}
    </update>

    <!-- 设置 SKU 状态 (自商品表冗余) -->
    <update id="setStatus" parameterType="map">
        UPDATE <include refid="tb"/>
        SET status = #{status}, updated_at = now()
        WHERE item_id IN
        <foreach item="itemId" collection="itemIds"
                 open="(" separator="," close=")">
            #{itemId}
        </foreach>
    </update>
</mapper>